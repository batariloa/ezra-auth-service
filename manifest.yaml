
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /auth(?:/(.*))$
        pathType: Prefix
        backend:
          service:
            name: my-lb-service-auth
            port:
              number: 60000
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
        - name: app
          image: batariloa/nodeapp:latest
          env:
            - name: MONGO_URI
              value: mongodb+srv://dre:Heroji333@nodeexpressproject.nbrwv0i.mongodb.net/JOBS_API?retryWrites=true&w=majority
            - name: JWT_SECRET
              value: bllblblblblblbl
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: my-lb-service-auth
spec:
  type: LoadBalancer
  selector:
    app: auth-service
  ports:
  - protocol: TCP
    port: 60000
    targetPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: my-lb-service2
spec:
  type: LoadBalancer
  selector:
    app: angular
  ports:
  - protocol: TCP
    port: 40000
    targetPort: 80
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angular
  template:
    metadata:
      labels:
        app: angular
    spec:
      containers:
        - name: app
          image: batariloa/angular
          imagePullPolicy: Always

---
